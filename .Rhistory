hvac2[1,114]
hvac2[,114]
hvac2[[114]]
hvac2[1][114]
hvac2[1]
(hvac2[1])[114]
hvac2[,114]
hvac2[1,114]
hvac2[114,"date"]
hvac2[114,1]
hvac[which(abs(hvac2[2]-herdImmunity)== min(abs(hvac2[2]-herdImmunity))),1]
hvac2[which(abs(hvac2[2]-herdImmunity)== min(abs(hvac2[2]-herdImmunity))),1]
counties_all <- c(pop_tx[1])
for (i in counties_all) {
gstr <- paste0("^",i,"$")
vac <- vaccine %>%
filter(grepl(gstr, county)) %>% tail(7)
model1 <- lm(full_pct ~ date, data = vac)
vac1 <- vac %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2022-12-31"), 1)) %>%
add_predictions(m1, "full_pct")
}
View(vac1)
counties_all <- c(pop_tx[1])
for (i in counties_all) {
gstr <- paste0("^",i,"$")
vac <- vaccine %>%
filter(grepl(gstr, county)) %>% tail(7)
model1 <- lm(full_pct ~ date, data = vac)
vac1 <- vac %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2022-12-31"), 1)) %>%
add_predictions(model1, "full_pct")
}
View(vac1)
# make a table with predicted date for herd immunity
counties_all <- c(pop_tx[1])
herd_table <-data.frame(x = 0, y = 0)
for (i in counties_all) {
gstr <- paste0("^",i,"$")
vac <- vaccine %>%
filter(grepl(gstr, county)) %>% tail(7)
model1 <- lm(full_pct ~ date, data = vac)
vac1 <- vac %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2022-12-31"), 1)) %>%
add_predictions(model1, "full_pct")
cell <- vac1[which(abs(vac1[2]-herdImmunity)== min(abs(vac1[2]-herdImmunity))),1]
herd_table[i,cell]
}
# make a table with predicted date for herd immunity
counties_all <- c(pop_tx[1])
herd_table <-data.frame(x = 0, y = 0)
for (i in counties_all) {
gstr <- paste0("^",i,"$")
vac <- vaccine %>%
filter(grepl(gstr, county)) %>% tail(7)
model1 <- lm(full_pct ~ date, data = vac)
vac1 <- vac %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2022-12-31"), 1)) %>%
add_predictions(model1, "full_pct")
cell <- vac1[which(abs(vac1[2]-herdImmunity)== min(abs(vac1[2]-herdImmunity))),1]
print (cell)
}
# make a table with predicted date for herd immunity
counties_all <- c(pop_tx[1])
herd_table <-data.frame(x = 0, y = 0)
for (i in counties_all) {
gstr <- paste0("^",i,"$")
vac <- vaccine %>%
filter(grepl(gstr, county)) %>% tail(7)
model1 <- lm(full_pct ~ date, data = vac)
vac1 <- vac %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2022-12-31"), 1)) %>%
add_predictions(model1, "full_pct")
cell <- vac1[[which(abs(vac1[2]-herdImmunity)== min(abs(vac1[2]-herdImmunity))),1]]
print (cell)
}
counties_all <- c(pop_tx[1])
herd_table <-data.frame(x = 0, y = 0)
for (i in counties_all) {
gstr <- paste0("^",i,"$")
vac <- vaccine %>%
filter(grepl(gstr, county)) %>% tail(7)
model1 <- lm(full_pct ~ date, data = vac)
vac1 <- vac %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2022-12-31"), 1)) %>%
add_predictions(model1, "full_pct")
cell <- vac1[[which(abs(vac1[2]-herdImmunity)== min(abs(vac1[2]-herdImmunity))),1]]
print (cell)
herd_table[i, cell]
}
View(herd_table)
counties_all <- c(pop_tx[1])
herd_table <-data.frame(x = 0, y = 0)
for (i in counties_all) {
vac <- vaccine %>%
filter(grepl(paste0(i,"$"), county)) %>% tail(7)
model1 <- lm(full_pct ~ date, data = vac)
vac1 <- vac %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2022-12-31"), 1)) %>%
add_predictions(model1, "full_pct")
cell <- vac1[[which(abs(vac1[2]-herdImmunity)== min(abs(vac1[2]-herdImmunity))),1]]
print (cell)
herd_table[i, cell]
}
for (i in counties_all) {
vac <- vaccine %>%
filter(grepl(i, county)) %>% tail(7)
model1 <- lm(full_pct ~ date, data = vac)
vac1 <- vac %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2022-12-31"), 1)) %>%
add_predictions(model1, "full_pct")
cell <- vac1[[which(abs(vac1[2]-herdImmunity)== min(abs(vac1[2]-herdImmunity))),1]]
print (cell)
herd_table[i, cell]
}
for (i in counties_all) {
vac <- vaccine %>%
filter(grepl(i, county))
vac <- vac %>% tail(7)
model1 <- lm(full_pct ~ date, data = vac)
vac1 <- vac %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2022-12-31"), 1)) %>%
add_predictions(model1, "full_pct")
cell <- vac1[[which(abs(vac1[2]-herdImmunity)== min(abs(vac1[2]-herdImmunity))),1]]
print (cell)
herd_table[i, cell]
}
View(counties_all)
#--------------------------------------------------
# Making the Texas map
#--------------------------------------------------
# make a table with predicted date for herd immunity
counties_all <- list(pop_tx[1])
#--------------------------------------------------
# Making the Texas map
#--------------------------------------------------
# make a table with predicted date for herd immunity
counties_all <- as_list(pop_tx[1])
#--------------------------------------------------
# Making the Texas map
#--------------------------------------------------
# make a table with predicted date for herd immunity
counties_all <- pop_tx[1]
#--------------------------------------------------
# Making the Texas map
#--------------------------------------------------
# make a table with predicted date for herd immunity
counties_all <- pop_tx[[1]]
herd_table <- pop_tx[1]
View(herd_table)
for (i in counties_all) {
vac <- vaccine %>%
filter(grepl(i, county))
vac <- vac %>% tail(7)
model1 <- lm(full_pct ~ date, data = vac)
vac1 <- vac %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2022-12-31"), 1)) %>%
add_predictions(model1, "full_pct")
cell <- vac1[[which(abs(vac1[2]-herdImmunity)== min(abs(vac1[2]-herdImmunity))),1]]
print (cell)
herd_table[i, cell]
}
# make a table with predicted date for herd immunity
counties_all <- pop_tx[[1]]
herd_table <- pop_tx[1]
for (i in counties_all) {
vac <- vaccine %>%
filter(grepl(i, county))
vac <- vac %>% tail(7)
model1 <- lm(full_pct ~ date, data = vac)
vac1 <- vac %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2024-12-31"), 1)) %>%
add_predictions(model1, "full_pct")
cell <- vac1[[which(abs(vac1[2]-herdImmunity)== min(abs(vac1[2]-herdImmunity))),1]]
print (cell)
herd_table[i, cell]
}
counties_all <- pop_tx[[1]]
herd_table <- pop_tx[1]
for (i in counties_all) {
vac <- vaccine %>%
filter(grepl(i, county))
vac <- vac %>% tail(7)
model1 <- lm(full_pct ~ date, data = vac)
vac1 <- vac %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2030-12-31"), 1)) %>%
add_predictions(model1, "full_pct")
cell <- vac1[[which(abs(vac1[2]-herdImmunity)== min(abs(vac1[2]-herdImmunity))),1]]
herd_table[i] <- cell
}
vac1 <- vac %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2050-12-31"), 1)) %>%
add_predictions(model1, "full_pct")
counties_all <- pop_tx[[1]]
herd_table <- pop_tx[1]
for (i in counties_all) {
vac <- vaccine %>%
filter(grepl(i, county))
vac <- vac %>% tail(7)
model1 <- lm(full_pct ~ date, data = vac)
vac1 <- vac %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2050-12-31"), 1)) %>%
add_predictions(model1, "full_pct")
cell <- vac1[[which(abs(vac1[2]-herdImmunity)== min(abs(vac1[2]-herdImmunity))),1]]
herd_table[i] <- cell
}
counties_all <- pop_tx[[1]]
herd_table <- pop_tx[1]
# make a table with predicted date for herd immunity
counties_all <- pop_tx[[1]]
herd_table <- pop_tx[1]
for (i in counties_all) {
gstr <- paste0("^",i,"$")
vac <- vaccine %>%
filter(grepl(gstr, county))
vac <- vac %>% tail(7)
model1 <- lm(full_pct ~ date, data = vac)
vac1 <- vac %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2150-12-31"), 1)) %>%
add_predictions(model1, "full_pct")
cell <- vac1[[which(abs(vac1[2]-herdImmunity)== min(abs(vac1[2]-herdImmunity))),1]]
herd_table[i] <- cell
}
#test variables
hco <- cases %>% filter(grepl('^De Witt$', county))
hvac <- vaccine %>% filter(grepl('^De Witt$', county))
hvac1 <- hvac %>% tail(7)
range <-c(as.Date("2020-12-30"), as.Date("2022-12-31"))
#modeling if the current rate of vaccination continues increasing
m1 <- lm(full_pct ~ date, data = hvac1)
#predicted data set for binomial model
hvac2 <-hvac1 %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2022-12-31"), 1)) %>%
add_predictions(m1, "full_pct")
hvac2[which(abs(hvac2[2]-herdImmunity)== min(abs(hvac2[2]-herdImmunity))),1]
immunity<- ggplot(hvac, mapping = aes(x = date, y = full_pct)) +
geom_smooth(method = "loess")+
geom_line(data = hvac2, color = "red", size = 1) +
scale_y_continuous(limits = c(0,100), expand = c(0,0)) +
scale_x_date(limits = range,
date_breaks = "1 month",
date_label = "%B %Y",
expand = c(0,0))+
theme_fivethirtyeight()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
geom_hline(yintercept=herdImmunity, linetype='dotted', col = 'red', size = 1) +
annotate("text", x = as.Date("2022-11-15"),
y = herdImmunity,
label = "Herd Immunity",
vjust = -0.5) +
geom_vline(xintercept=as.Date("2021-04-25"),
linetype='dotted', col = 'red', size = 1) +
annotate("text", y = 80,
x = as.Date("2021-02-28"),
label = "Current Date",
vjust = -0.5)
immunity
#--------------------------------------------------
# Making the Texas map
#--------------------------------------------------
# make a table with predicted date for herd immunity
counties_all <- unique(vaccine$county)
herd_table <- data_frame(x = counties_all)
#--------------------------------------------------
# make a table with predicted date for herd immunity
counties_all <- unique(vaccine$county)
herd_table <- tibble(counties = counties_all)
for (i in counties_all) {
gstr <- paste0("^",i,"$")
vac <- vaccine %>%
filter(grepl(gstr, county))
vac <- vac %>% tail(7)
model1 <- lm(full_pct ~ date, data = vac)
vac1 <- vac %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2150-12-31"), 1)) %>%
add_predictions(model1, "full_pct")
cell <- vac1[[which(abs(vac1[2]-herdImmunity)== min(abs(vac1[2]-herdImmunity))),1]]
herd_table[i] <- cell
}
hco <- cases %>% filter(grepl('^DeWitt$', county))
hvac <- vaccine %>% filter(grepl('^DeWitt$', county))
hvac1 <- hvac %>% tail(7)
range <-c(as.Date("2020-12-30"), as.Date("2022-12-31"))
#modeling if the current rate of vaccination continues increasing
m1 <- lm(full_pct ~ date, data = hvac1)
#predicted data set for binomial model
hvac2 <-hvac1 %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2022-12-31"), 1)) %>%
add_predictions(m1, "full_pct")
hvac2[which(abs(hvac2[2]-herdImmunity)== min(abs(hvac2[2]-herdImmunity))),1]
immunity<- ggplot(hvac, mapping = aes(x = date, y = full_pct)) +
geom_smooth(method = "loess")+
geom_line(data = hvac2, color = "red", size = 1) +
scale_y_continuous(limits = c(0,100), expand = c(0,0)) +
scale_x_date(limits = range,
date_breaks = "1 month",
date_label = "%B %Y",
expand = c(0,0))+
theme_fivethirtyeight()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
geom_hline(yintercept=herdImmunity, linetype='dotted', col = 'red', size = 1) +
annotate("text", x = as.Date("2022-11-15"),
y = herdImmunity,
label = "Herd Immunity",
vjust = -0.5) +
geom_vline(xintercept=as.Date("2021-04-25"),
linetype='dotted', col = 'red', size = 1) +
annotate("text", y = 80,
x = as.Date("2021-02-28"),
label = "Current Date",
vjust = -0.5)
immunity
#----------------------------------------
# U.S. Herd-immunity Prediction by County
# By: Salomon Villatoro
# Date 4/26/2021
# GAFL 531
#----------------------------------------
# Packages Necessary
library(tidyverse)
library(stargazer)
library(rgdal)
library(leaflet)
library(readxl)
library(janitor)
library(lubridate)
library(tidycensus)
library(ggthemes)
library(splines)
library(modelr)
#-------------------------------
# R naught by state calculation
#-------------------------------
# Global R0 as calculated by Billah et. al. 2020
# NOTE: Not every county will have the same R0 as this
#       number is calculated through a variety of measures
r0 <- 2.87
herdImmunity <- (1-(1/r0))*100
#--------------------------------------------------
# Read in necessary Data Sets (UPDATED: 4.25.2021)
#--------------------------------------------------
# obtaining Texas population estimates (jan 1, 2020)
pop_tx <- read.csv("county2019.csv") %>%
select(county, "pop" = jan1_2020_pop_est) %>%
filter(county != "State of Texas") %>% ifelse(county == "De Witt", "DeWitt", NULL)
txPop <- sum(pop_tx$pop)
# Texas recovered population percentage
recovered <- (2722233/txPop)*100
# preparing vaccination data
# compiling list of excel sheets to be used
temp <- list.files(path = "AccessibleVaccineDashboardData" , pattern = '/*.xlsx')
#compiling dates of data collection
dates <- substr(temp, 1,10)
#creating vaccine table
vaccine <- read_excel(paste0("AccessibleVaccineDashboardData/", temp[1]),
sheet = 2, na = "--") %>%
filter(`County Name` != 'Federal Long-Term Care Vaccination Program' &
`County Name` != 'Federal Pharmacy Retail Vaccination Program') %>%
select(1) %>% filter(`County Name` != "Texas")
#looping through 100 files to obtain vaccine data
# obtaining number of people who are fully vaccinated
for (i in seq(length(temp))) {
x <- read_excel(paste0("AccessibleVaccineDashboardData/", temp[i]),
sheet = 2, na = "--") %>%
filter(`County Name` != 'Federal Long-Term Care Vaccination Program' &
`County Name` != 'Federal Pharmacy Retail Vaccination Program') %>%
select(`County Name`, `People Fully Vaccinated`)
vaccine <- merge(vaccine, x, by = "County Name")
}
colnames(vaccine) <- c("county", dates)
#tidying vaccine data for county
vaccine <- pivot_longer(vaccine,!county, names_to = "date", values_to = "fully")%>%
mutate(date = ymd(date)) %>%
mutate(fully = as.integer(fully)) %>%
left_join(pop_tx, by = "county") %>%
mutate("full_pct" = (fully/pop)*100)
# preparing Covid Data
txCovCases_county <- read_excel("Texas COVID-19 Case Count Data by County.xlsx",
col_names = FALSE)
txCovCases_county <- txCovCases_county[-c(1,2,258,259,260, 261,262),]
getDate <- function (x) {
for (i in seq(ncol(x))) {
if (x[1,i] != "County Name") {
x[1,i] <- substr(x[1,i], 7, 16)
} else {
x[1,i] <- 'county'
}
}
return(x)
}
cases <- getDate(txCovCases_county) %>%
row_to_names(row_number = 1) %>%
pivot_longer(!county, names_to = "date", values_to = 'cases') %>%
mutate(date = mdy(date)) %>%
mutate(cases = as.integer(cases)) %>%
left_join(pop_tx, by = "county") %>%
mutate("full_pct" = (cases/pop)*100)
#--------------------------------------------------
# Making the Plot
#--------------------------------------------------
#test variables
hco <- cases %>% filter(grepl('^DeWitt$', county))
hvac <- vaccine %>% filter(grepl('^DeWitt$', county))
hvac1 <- hvac %>% tail(7)
range <-c(as.Date("2020-12-30"), as.Date("2022-12-31"))
#--------------------------------------------------
# Read in necessary Data Sets (UPDATED: 4.25.2021)
#--------------------------------------------------
# obtaining Texas population estimates (jan 1, 2020)
pop_tx <- read.csv("county2019.csv") %>%
select(county, "pop" = jan1_2020_pop_est) %>%
filter(county != "State of Texas") %>% ifelse(county == "De Witt", "DeWitt", county)
pop_tx <- read.csv("county2019.csv") %>%
select(county, "pop" = jan1_2020_pop_est) %>%
filter(county != "State of Texas")
View(pop_tx)
pop_tx[county == "De Witt"]
pop_tx$county[county == "De Witt"]
pop_tx$county["De Witt"]
pop_tx$county[pop_tx$county =="De Witt"]
pop_tx$county[pop_tx$county =="De Witt"] <- "DeWitt"
txPop <- sum(pop_tx$pop)
# Texas recovered population percentage
recovered <- (2722233/txPop)*100
# preparing vaccination data
# compiling list of excel sheets to be used
temp <- list.files(path = "AccessibleVaccineDashboardData" , pattern = '/*.xlsx')
#compiling dates of data collection
dates <- substr(temp, 1,10)
#creating vaccine table
vaccine <- read_excel(paste0("AccessibleVaccineDashboardData/", temp[1]),
sheet = 2, na = "--") %>%
filter(`County Name` != 'Federal Long-Term Care Vaccination Program' &
`County Name` != 'Federal Pharmacy Retail Vaccination Program') %>%
select(1) %>% filter(`County Name` != "Texas")
#looping through 100 files to obtain vaccine data
# obtaining number of people who are fully vaccinated
for (i in seq(length(temp))) {
x <- read_excel(paste0("AccessibleVaccineDashboardData/", temp[i]),
sheet = 2, na = "--") %>%
filter(`County Name` != 'Federal Long-Term Care Vaccination Program' &
`County Name` != 'Federal Pharmacy Retail Vaccination Program') %>%
select(`County Name`, `People Fully Vaccinated`)
vaccine <- merge(vaccine, x, by = "County Name")
}
colnames(vaccine) <- c("county", dates)
#tidying vaccine data for county
vaccine <- pivot_longer(vaccine,!county, names_to = "date", values_to = "fully")%>%
mutate(date = ymd(date)) %>%
mutate(fully = as.integer(fully)) %>%
left_join(pop_tx, by = "county") %>%
mutate("full_pct" = (fully/pop)*100)
# preparing Covid Data
txCovCases_county <- read_excel("Texas COVID-19 Case Count Data by County.xlsx",
col_names = FALSE)
txCovCases_county <- txCovCases_county[-c(1,2,258,259,260, 261,262),]
getDate <- function (x) {
for (i in seq(ncol(x))) {
if (x[1,i] != "County Name") {
x[1,i] <- substr(x[1,i], 7, 16)
} else {
x[1,i] <- 'county'
}
}
return(x)
}
cases <- getDate(txCovCases_county) %>%
row_to_names(row_number = 1) %>%
pivot_longer(!county, names_to = "date", values_to = 'cases') %>%
mutate(date = mdy(date)) %>%
mutate(cases = as.integer(cases)) %>%
left_join(pop_tx, by = "county") %>%
mutate("full_pct" = (cases/pop)*100)
hvac <- vaccine %>% filter(grepl('^DeWitt$', county))
hvac1 <- hvac %>% tail(7)
range <-c(as.Date("2020-12-30"), as.Date("2022-12-31"))
#modeling if the current rate of vaccination continues increasing
m1 <- lm(full_pct ~ date, data = hvac1)
#predicted data set for binomial model
hvac2 <-hvac1 %>%
data_grid(date = seq.Date(as.Date("2021-04-25"),as.Date("2022-12-31"), 1)) %>%
add_predictions(m1, "full_pct")
hvac2[which(abs(hvac2[2]-herdImmunity)== min(abs(hvac2[2]-herdImmunity))),1]
immunity<- ggplot(hvac, mapping = aes(x = date, y = full_pct)) +
geom_smooth(method = "loess")+
geom_line(data = hvac2, color = "red", size = 1) +
scale_y_continuous(limits = c(0,100), expand = c(0,0)) +
scale_x_date(limits = range,
date_breaks = "1 month",
date_label = "%B %Y",
expand = c(0,0))+
theme_fivethirtyeight()+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
geom_hline(yintercept=herdImmunity, linetype='dotted', col = 'red', size = 1) +
annotate("text", x = as.Date("2022-11-15"),
y = herdImmunity,
label = "Herd Immunity",
vjust = -0.5) +
geom_vline(xintercept=as.Date("2021-04-25"),
linetype='dotted', col = 'red', size = 1) +
annotate("text", y = 80,
x = as.Date("2021-02-28"),
label = "Current Date",
vjust = -0.5)
immunity
#--------------------------------------------------
# Making the Texas map
#--------------------------------------------------
# make a table with predicted date for herd immunity
counties_all <- unique(vaccine$county)
herd_table <- tibble(counties = counties_all)
View(herd_table)
